{"version":3,"file":"5.ec98399205ab841921f7.hot-update.js","sources":["webpack:///components/layouts/pagination.js"],"sourcesContent":["import styled from 'styled-components'\nimport React, { Component, Fragment } from 'react'\n\nconst Nav = styled('ul')`\n  margin-bottom: 0;\n  padding-left: 0;\n  list-style-type: none;\n  margin-top: 25px;\n  margin-left: 2px;\n  text-align: center;\n`\n\nconst List = styled('li')`\n  display: inline-block;\n  cursor: pointer;\n  pointer-events: ${props => props.active ? \"none\" : \"normal\"};\n  opacity: ${props => props.active ? \"0.6\" : \"none\"}; \n  font-weight: ${props => props.active ? \"900\" : \"normal\"};\n  &:hover {\n    font-weight: 900;\n  }\n`\n\nconst Link = styled('a')`\n  border: 1px solid #6b88a4;\n  min-width: 3.5rem;\n  padding: 0.75rem 1rem;\n  text-align: center;\n  box-shadow: none !important;\n  margin-left: -1px;\n  color: ${props => props.active ? \"grey\" : \"#0079d3\"};\n  font-size: 1rem;\n  text-decoration: none;\n`\n\nconst LEFT_PAGE = \"LEFT\"\nconst RIGHT_PAGE = \"RIGHT\"\n\nconst range = (from, to, step = 1) => {\n  let i = from;\n  const range = []\n\n  while (i <= to) {\n    range.push(i)\n    i += step\n  }\n\n  return range\n}\n\nclass Pagination extends Component {\n  constructor(props) {\n    super(props)\n    const { totalRecords = null, pageLimit = 30, pageNeighbours = 0 } = props\n\n    this.pageLimit = typeof pageLimit === \"number\" ? pageLimit : 30\n    this.totalRecords = typeof totalRecords === \"number\" ? totalRecords : 0\n\n    this.pageNeighbours =\n      typeof pageNeighbours === \"number\"\n        ? Math.max(0, Math.min(pageNeighbours, 2))\n        : 0\n\n    this.totalPages = Math.ceil(this.totalRecords / this.pageLimit)\n\n    this.state = { currentPage: props.pageNumber }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.pageNumber !== prevProps.pageNumber && this.props.pageNumber > prevProps.pageNumber) {\n      console.log(\"not from link\")\n    }\n  }\n\n  gotoPage = (page) => {\n    const { onPageChanged = f => f } = this.props\n\n    const currentPage = Math.max(0, Math.min(page, this.totalPages))\n\n    const paginationData = {\n      currentPage,\n      totalPages: this.totalPages,\n      pageLimit: this.pageLimit,\n      totalRecords: this.totalRecords\n    }\n\n    this.setState({ currentPage }, () => onPageChanged(paginationData))\n  }\n\n  handleClick = (page, evt) => {\n    evt.preventDefault()\n    this.gotoPage(page)\n  }\n\n  handleMoveLeft = evt => {\n    evt.preventDefault()\n    this.gotoPage(this.state.currentPage - this.pageNeighbours * 2 - 1)\n  }\n\n  handleMoveRight = evt => {\n    evt.preventDefault()\n    this.gotoPage(this.state.currentPage + this.pageNeighbours * 2 + 1)\n  }\n\n  fetchPageNumbers = () => {\n    const totalPages = this.totalPages;\n    const currentPage = this.state.currentPage;\n    const pageNeighbours = this.pageNeighbours;\n\n    const totalNumbers = this.pageNeighbours * 2 + 3\n    const totalBlocks = totalNumbers + 2\n\n    if (totalPages > totalBlocks) {\n      let pages = []\n\n      const leftBound = currentPage - pageNeighbours\n      const rightBound = currentPage + pageNeighbours\n      const beforeLastPage = totalPages - 1\n\n      const startPage = leftBound > 2 ? leftBound : 2\n      const endPage = rightBound < beforeLastPage ? rightBound : beforeLastPage\n\n      pages = range(startPage, endPage)\n\n      const pagesCount = pages.length\n      const singleSpillOffset = totalNumbers - pagesCount - 1\n\n      const leftSpill = startPage > 2\n      const rightSpill = endPage < beforeLastPage\n\n      const leftSpillPage = LEFT_PAGE\n      const rightSpillPage = RIGHT_PAGE\n\n      if (leftSpill && !rightSpill) {\n        const extraPages = range(startPage - singleSpillOffset, startPage - 1)\n        pages = [leftSpillPage, ...extraPages, ...pages]\n      } else if (!leftSpill && rightSpill) {\n        const extraPages = range(endPage + 1, endPage + singleSpillOffset)\n        pages = [...pages, ...extraPages, rightSpillPage]\n      } else if (leftSpill && rightSpill) {\n        pages = [leftSpillPage, ...pages, rightSpillPage]\n      }\n\n      return [1, ...pages, totalPages]\n    }\n\n    return range(1, totalPages)\n  }\n\n  render() {\n    if (!this.totalRecords) return null\n    if (this.state.currentPage > this.pageNeighbours) return null\n    if (this.totalPages === 1) return null\n\n    const { currentPage } = this.state\n    const pages = this.fetchPageNumbers()\n\n    return (\n      <Nav>\n        {pages.map((page, index) => {\n          if (page === LEFT_PAGE)\n            return (\n              <List key={index}>\n                <Link\n                  href=\"#\"\n                  aria-label=\"Previous\"\n                  onClick={this.handleMoveLeft}>\n                  <span aria-hidden=\"true\">&laquo;</span>\n                  <span className=\"sr-only\">Previous</span>\n                </Link>\n              </List>\n            )\n          if (page === RIGHT_PAGE)\n            return (\n              <List key={index}>\n                <Link\n                  href=\"#\"\n                  aria-label=\"Next\"\n                  onClick={this.handleMoveRight}>\n                  <span aria-hidden=\"true\">&raquo;</span>\n                  <span className=\"sr-only\">Next</span>\n                </Link>\n              </List>\n            )\n\n          return (\n            <List key={index} \n              active={currentPage === page}>\n              <Link\n                href=\"#\"\n                onClick={e => this.handleClick(page, e)}>\n                {page}\n              </Link>\n            </List>\n          )\n        })}\n      </Nav>\n    )\n  }\n}\n\nexport default Pagination\n\n\n\n// WEBPACK FOOTER //\n// components/layouts/pagination.js"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AAMA;AAAA;AAAA;AAAA;AAOA;AAAA;AAKA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAEA;AAKA;AAEA;AAAA;AAAA;AAdA;AAeA;AACA;;;AACA;AACA;AACA;AACA;AACA;;;AA6EA;AAAA;AACA;AAAA;AACA;AACA;AAHA;AAMA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAOA;AAGA;;;;AApJA;AACA;;;;;;;;AAuBA;AAAA;AAAA;AACA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;AAEA;AACA;AACA;AAAA;AACA;;;;;;AAEA;AACA;AACA;AAAA;AACA;;;;;;AAEA;AACA;AACA;AAAA;AACA;;;;;;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAsDA;;;;A","sourceRoot":""}